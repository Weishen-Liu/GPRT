name: CI

on:
  # allows us to run workflows manually
  workflow_dispatch:

  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Prepare Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.1.1
      with:
        version: 1.3.231.1
        cache: true
      
    - name: Apt dependencies
      shell: bash
      run: |
        sudo apt -y update
        sudo apt install -y libx11-xcb-dev \
                            xorg-dev \
                            libxinerama-dev \
                            libglu1-mesa-dev \
                            freeglut3-dev \
                            mesa-common-dev

    - name: Setup environment
      shell: bash
      run: |
         echo "PATH=$HOME/dxc-artifacts/bin:$PATH" >> $GITHUB_ENV

    - name: Build Static
      shell: bash
      run: |
        mkdir bld-static
        cd bld-static
        cmake --version
        cmake ..
        make VERBOSE=1 -j4

    - name: Build Shared
      shell: bash
      run: |
        mkdir bld-shared
        cd bld-shared
        cmake --version
        cmake .. -DGPRT_BUILD_SHARED=ON
        make VERBOSE=1 -j4


  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.231.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Pull and unpack dxc compiler
      run: |
        cd $HOME
        C:\msys64\usr\bin\wget.exe https://anl.box.com/shared/static/63jh85qcoedxi4hi84lizp9e0c9h0jo5.zip -O dxc-artifacts.zip
        unzip dxc-artifacts


    - name: Build
      shell: bash
      run: |
        mkdir bld
        cd bld
        cmake --version
        cmake .. -DVulkan_BIN_DIR=$HOME/bin
        cmake --build .
